/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.AtletaController;
import controller.MedalhaController;
import controller.ModalidadeController;
import controller.PremiacaoController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Atleta;
import model.Medalha;
import model.Modalidade;
import model.Premiacao;

/**
 *
 * @author Caveirak52
 */
public class PremiacaoView extends javax.swing.JFrame {
    List<Premiacao> ListaPremiacao = new ArrayList<>();
    PremiacaoController pController = new PremiacaoController();
    Premiacao premiacao = new Premiacao();
   
    
    /**
     * Creates new form Premiacao
     */
    public PremiacaoView() {
        initComponents();
        tbPremiacao.getColumnModel().getColumn(0).setMinWidth(0);
        tbPremiacao.getColumnModel().getColumn(0).setMaxWidth(0);
        LotaComboboxAtleta();
        LotaComboboxModalidade();
        LotaComboboxMedalha();
        CarregaPremiacao();
        txtIdPremiacao.setEnabled(false);
        txtIdPremiacao.setVisible(false);
        cbAtleta.setEnabled(false);
        cbMedalha.setEnabled(false);
        cbModalidade.setEnabled(false);
        btnAtualizarPremiacao.setEnabled(false);
        btnCadastrar.setEnabled(false);
        btnDeletarPremiacao.setEnabled(false);
        btnLimparPremiacao.setEnabled(false);
        txtPesquisaPremiacao.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbAtleta = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbModalidade = new javax.swing.JComboBox<>();
        cbMedalha = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtIdPremiacao = new javax.swing.JTextField();
        txtPesquisaPremiacao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPremiacao = new javax.swing.JTable();
        btnNovoPremiacao = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        btnLimparPremiacao = new javax.swing.JButton();
        btnAtualizarPremiacao = new javax.swing.JButton();
        btnDeletarPremiacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Premiação de Atleta");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Premiação do Atleta");

        cbAtleta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um Atleta" }));
        cbAtleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAtletaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Atleta");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Modalidade");

        cbModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma Modalidade" }));
        cbModalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbModalidadeActionPerformed(evt);
            }
        });

        cbMedalha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma Medalha" }));
        cbMedalha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMedalhaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Medalha");

        txtPesquisaPremiacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaPremiacaoKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Pesquisar");

        tbPremiacao.setAutoCreateRowSorter(true);
        tbPremiacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Atleta", "Modalidade", "Medalha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPremiacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPremiacaoMouseClicked(evt);
            }
        });
        tbPremiacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbPremiacaoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbPremiacao);

        btnNovoPremiacao.setText("Novo");
        btnNovoPremiacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoPremiacaoActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnLimparPremiacao.setText("Limpar");

        btnAtualizarPremiacao.setText("Atualizar");
        btnAtualizarPremiacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarPremiacaoActionPerformed(evt);
            }
        });

        btnDeletarPremiacao.setText("Deletar");
        btnDeletarPremiacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarPremiacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(cbAtleta, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(cbModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(cbMedalha, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(txtPesquisaPremiacao, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(34, 34, 34)
                            .addComponent(txtIdPremiacao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNovoPremiacao, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizarPremiacao)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeletarPremiacao)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimparPremiacao)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbMedalha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPesquisaPremiacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdPremiacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbAtleta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoPremiacao)
                    .addComponent(btnCadastrar)
                    .addComponent(btnLimparPremiacao)
                    .addComponent(btnAtualizarPremiacao)
                    .addComponent(btnDeletarPremiacao))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        Atleta atletacb = null;
        Modalidade modalidadecb = null;
        Medalha medalhacb = null;
        
        atletacb = (Atleta) cbAtleta.getSelectedItem();
        modalidadecb = (Modalidade) cbModalidade.getSelectedItem();
        medalhacb = (Medalha) cbMedalha.getSelectedItem();
        
        premiacao.setAtleta(atletacb);
        premiacao.setModalidade(modalidadecb);
        premiacao.setMedalha(medalhacb);
        
        boolean salvar = false;
        try {
            salvar = pController.salvar(premiacao);
        } catch (SQLException ex) {
            Logger.getLogger(PremiacaoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         if(salvar){
                JOptionPane.showMessageDialog(this, "Atleta: "+atletacb.getNome()+
                        " Premiado com sucesso! ", "Premiação", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("src/img/correct.png"));
            CarregaPremiacao();
            }else{
                JOptionPane.showMessageDialog(this, "A Premiação não pode ser feita! ","Premiação Error",JOptionPane.ERROR_MESSAGE);
            }
       
       
        
        
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void cbAtletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAtletaActionPerformed
        if(cbAtleta.getSelectedItem()== "Selecione um Atleta"){
        JOptionPane.showMessageDialog(null, "Selecione um Atleta Valido!");
        cbAtleta.setSelectedIndex(1);
        }
    }//GEN-LAST:event_cbAtletaActionPerformed

    private void cbModalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbModalidadeActionPerformed
         if(cbModalidade.getSelectedItem()== "Selecione uma Modalidade"){
        JOptionPane.showMessageDialog(null, "Selecione um Modalidade Valida!");
        cbModalidade.setSelectedIndex(1);
        }
    }//GEN-LAST:event_cbModalidadeActionPerformed

    private void cbMedalhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMedalhaActionPerformed
       if(cbMedalha.getSelectedItem()== "Selecione uma Medalha"){
        JOptionPane.showMessageDialog(null, "Selecione um Medalha Valida!");
        cbMedalha.setSelectedIndex(1);
        }
    }//GEN-LAST:event_cbMedalhaActionPerformed

    private void btnNovoPremiacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoPremiacaoActionPerformed
        btnAtualizarPremiacao.setEnabled(true);
        btnCadastrar.setEnabled(true);
        btnDeletarPremiacao.setEnabled(true);
        btnLimparPremiacao.setEnabled(true);
        cbAtleta.setEnabled(true);
        cbMedalha.setEnabled(true);
        cbModalidade.setEnabled(true);
        txtPesquisaPremiacao.setEnabled(true);
    }//GEN-LAST:event_btnNovoPremiacaoActionPerformed

    private void txtPesquisaPremiacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaPremiacaoKeyReleased
        CarregaPremiacaoPorNome(txtPesquisaPremiacao.getText());
    }//GEN-LAST:event_txtPesquisaPremiacaoKeyReleased

    private void tbPremiacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbPremiacaoKeyReleased
       
    }//GEN-LAST:event_tbPremiacaoKeyReleased

    private void tbPremiacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPremiacaoMouseClicked
  
       if(tbPremiacao.getSelectedRow() != -1){ 
           btnAtualizarPremiacao.setEnabled(true);
        btnCadastrar.setEnabled(true);
        btnDeletarPremiacao.setEnabled(true);
        btnLimparPremiacao.setEnabled(true);
        cbAtleta.setEnabled(true);
        cbMedalha.setEnabled(true);
        cbModalidade.setEnabled(true);
        txtPesquisaPremiacao.setEnabled(true);
         txtIdPremiacao.setText(tbPremiacao.getValueAt(tbPremiacao.getSelectedRow(), 0).toString());
        }
    }//GEN-LAST:event_tbPremiacaoMouseClicked

    private void btnAtualizarPremiacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarPremiacaoActionPerformed
      if(txtIdPremiacao.getText().length() > 0){
        Atleta atletacb = null;
        Modalidade modalidadecb = null;
        Medalha medalhacb = null;
        
        if(cbAtleta.getSelectedItem()== "Selecione um Atleta"){
                JOptionPane.showMessageDialog(null, "Selecione um Atleta Para atualizar a Premiação!","Selecione um Atleta",JOptionPane.WARNING_MESSAGE);
                cbAtleta.setSelectedIndex(1);
                }else{
                         atletacb = (Atleta) cbAtleta.getSelectedItem();
                     }
        
          if(cbModalidade.getSelectedItem()== "Selecione uma Modalidade"){
                JOptionPane.showMessageDialog(null, "Selecione uma Modalidade Para atualizar a Premiação!","Selecione uma Modalidade",JOptionPane.WARNING_MESSAGE);
                cbModalidade.setSelectedIndex(1);
                }else{
                         modalidadecb = (Modalidade) cbModalidade.getSelectedItem();
                     }
        
         if(cbMedalha.getSelectedItem()== "Selecione uma Medalha"){
                JOptionPane.showMessageDialog(null, "Selecione uma Medalha Para atualizar a Premiação!","Selecione uma Medalha",JOptionPane.WARNING_MESSAGE);
                cbMedalha.setSelectedIndex(1);
                }else{
                         medalhacb = (Medalha) cbMedalha.getSelectedItem();
                     }
       
        
        premiacao.setAtleta(atletacb);
        premiacao.setModalidade(modalidadecb);
        premiacao.setMedalha(medalhacb);
        premiacao.setID_Premiacao(Integer.parseInt(txtIdPremiacao.getText()));
        boolean editar = false;
          try {
              editar = pController.editar(premiacao);
          } catch (SQLException ex) {
              Logger.getLogger(PremiacaoView.class.getName()).log(Level.SEVERE, null, ex);
          }
        
         if(editar){
                JOptionPane.showMessageDialog(this, "Atualização realizada com Sucesso", "Premiação", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("src/img/correct.png"));
            CarregaPremiacao();
            }else{
                JOptionPane.showMessageDialog(this, "A Premiação não pode ser Atualizada! ","Premiação Error",JOptionPane.ERROR_MESSAGE);
            }
        }else{
             JOptionPane.showMessageDialog(this, "Selecione alguma premiação para Editar ","Premiação Error",JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnAtualizarPremiacaoActionPerformed

    private void btnDeletarPremiacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarPremiacaoActionPerformed
         int input = JOptionPane.showConfirmDialog(null, "Você Realmente deseja Excluir essa premiação?","Excluir Premiação",JOptionPane.OK_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
         
        if (input == JOptionPane.YES_OPTION) {
        if(tbPremiacao.getSelectedRow() != -1){
          

                 boolean excluir = pController.excluir((int)tbPremiacao.getValueAt(tbPremiacao.getSelectedRow(), 0));

             if(excluir){
                    JOptionPane.showMessageDialog(this, "Premiação Deletada com Sucesso", "Premiação", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("src/img/correct.png"));
                CarregaPremiacao();
                }else{
                    JOptionPane.showMessageDialog(this, "A Premiação não pode ser Deletada! ","Premiação Error",JOptionPane.ERROR_MESSAGE);
                }


           }else{
                JOptionPane.showMessageDialog(this, "Selecione alguma premiação para deletar ","Premiação Error",JOptionPane.ERROR_MESSAGE);
            }

        } 
        
    }//GEN-LAST:event_btnDeletarPremiacaoActionPerformed

   
    
    private void LotaComboboxAtleta(){
       AtletaController aController = new AtletaController();
        
        aController.Buscar().forEach((p) -> {
            cbAtleta.addItem(p);
        });
    
    }
    
       private void LotaComboboxModalidade(){
       ModalidadeController mController = new ModalidadeController();
        
        mController.Buscar().forEach((p) -> {
            cbModalidade.addItem(p);
        });
    
    }
    
       private void LotaComboboxMedalha(){
       MedalhaController meController = new MedalhaController();
        
        meController.Buscar().forEach((p) -> {
            cbMedalha.addItem(p);
        });
    
    }
    
       
        private void CarregaPremiacaoPorNome(String nomeAtleta){
         DefaultTableModel modeloTbAtleta = (DefaultTableModel) tbPremiacao.getModel();
         ListaPremiacao = pController.BuscarPorNome(nomeAtleta);
         if(ListaPremiacao.size() > 0){
         modeloTbAtleta.setRowCount(0);
         
         for(int i = 0 ; i<ListaPremiacao.size();i++){
             modeloTbAtleta.addRow(new Object[]{
                 ListaPremiacao.get(i).getID_Premiacao(),
                 ListaPremiacao.get(i).getAtleta().getNome(),
                 ListaPremiacao.get(i).getModalidade().getNome(),
                 ListaPremiacao.get(i).getMedalha().getNome()
                 });
         
             }
         }
     }
       
       
       
     private void CarregaPremiacao(){
         DefaultTableModel modeloTbAtleta = (DefaultTableModel) tbPremiacao.getModel();
         ListaPremiacao = pController.Buscar();
         modeloTbAtleta.setRowCount(0);
         
         for(int i = 0 ; i<ListaPremiacao.size();i++){
             modeloTbAtleta.addRow(new Object[]{
                 ListaPremiacao.get(i).getID_Premiacao(),
                 ListaPremiacao.get(i).getAtleta().getNome(),
                 ListaPremiacao.get(i).getModalidade().getNome(),
                 ListaPremiacao.get(i).getMedalha().getNome()
             });
         
         }
         
     }
        
        
        
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PremiacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PremiacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PremiacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PremiacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PremiacaoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarPremiacao;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnDeletarPremiacao;
    private javax.swing.JButton btnLimparPremiacao;
    private javax.swing.JButton btnNovoPremiacao;
    private javax.swing.JComboBox<Object> cbAtleta;
    private javax.swing.JComboBox<Object> cbMedalha;
    private javax.swing.JComboBox<Object> cbModalidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPremiacao;
    private javax.swing.JTextField txtIdPremiacao;
    private javax.swing.JTextField txtPesquisaPremiacao;
    // End of variables declaration//GEN-END:variables
}
